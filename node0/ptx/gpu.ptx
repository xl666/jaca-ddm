//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-19856038
// Cuda compilation tools, release 7.5, V7.5.17
// Based on LLVM 3.4svn
//

.version 4.3
.target sm_20
.address_size 64

	// .globl	classify

.visible .func  (.param .b32 func_retval0) classify(
	.param .b64 classify_param_0,
	.param .b32 classify_param_1,
	.param .b64 classify_param_2,
	.param .b64 classify_param_3,
	.param .b64 classify_param_4,
	.param .b64 classify_param_5,
	.param .b64 classify_param_6,
	.param .b64 classify_param_7,
	.param .b32 classify_param_8
)
{
	.reg .pred 	%p<12>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<31>;
	.reg .b64 	%rd<19>;


	ld.param.u64 	%rd3, [classify_param_0];
	ld.param.u32 	%r14, [classify_param_1];
	ld.param.u64 	%rd4, [classify_param_2];
	ld.param.u64 	%rd5, [classify_param_3];
	ld.param.u64 	%rd6, [classify_param_4];
	ld.param.u64 	%rd7, [classify_param_5];
	ld.param.u64 	%rd8, [classify_param_6];
	ld.param.u64 	%rd9, [classify_param_7];
	ld.param.u32 	%r15, [classify_param_8];
	mov.u32 	%r27, 0;

BB0_1:
	mov.u32 	%r24, %r27;
	mov.u32 	%r1, %r24;
	mul.wide.s32 	%rd10, %r1, 4;
	add.s64 	%rd11, %rd5, %rd10;
	ld.u32 	%r2, [%rd11];
	setp.eq.s32	%p1, %r2, 0;
	add.s64 	%rd1, %rd4, %rd10;
	@%p1 bra 	BB0_3;
	bra.uni 	BB0_2;

BB0_3:
	ld.u32 	%r19, [%rd1];
	add.s32 	%r20, %r19, %r14;
	mul.wide.s32 	%rd12, %r20, 4;
	add.s64 	%rd13, %rd3, %rd12;
	ld.f32 	%f1, [%rd13];
	add.s64 	%rd15, %rd6, %rd10;
	ld.u32 	%r4, [%rd15];
	setp.lt.s32	%p2, %r4, 1;
	mov.u32 	%r28, %r1;
	@%p2 bra 	BB0_14;

	mul.lo.s32 	%r5, %r1, %r15;
	mov.u32 	%r29, 0;

BB0_5:
	add.s32 	%r22, %r29, %r5;
	mul.wide.s32 	%rd16, %r22, 4;
	add.s64 	%rd17, %rd8, %rd16;
	ld.f32 	%f2, [%rd17];
	add.s64 	%rd18, %rd7, %rd16;
	ld.u32 	%r7, [%rd18];
	setp.eq.s32	%p3, %r7, 0;
	add.s64 	%rd2, %rd9, %rd16;
	@%p3 bra 	BB0_11;
	bra.uni 	BB0_6;

BB0_11:
	setp.gtu.f32	%p9, %f1, %f2;
	@%p9 bra 	BB0_13;
	bra.uni 	BB0_12;

BB0_6:
	setp.eq.s32	%p4, %r7, 1;
	@%p4 bra 	BB0_9;
	bra.uni 	BB0_7;

BB0_9:
	setp.leu.f32	%p8, %f1, %f2;
	@%p8 bra 	BB0_13;
	bra.uni 	BB0_10;

BB0_7:
	setp.eq.s32	%p5, %r7, 2;
	setp.eq.f32	%p6, %f1, %f2;
	and.pred  	%p7, %p5, %p6;
	@!%p7 bra 	BB0_13;
	bra.uni 	BB0_8;

BB0_13:
	add.s32 	%r29, %r29, 1;
	setp.lt.s32	%p10, %r29, %r4;
	mov.u32 	%r25, %r1;
	mov.u32 	%r28, %r25;
	@%p10 bra 	BB0_5;
	bra.uni 	BB0_14;

BB0_12:
	ld.u32 	%r10, [%rd2];
	mov.u32 	%r28, %r10;
	bra.uni 	BB0_14;

BB0_10:
	ld.u32 	%r9, [%rd2];
	mov.u32 	%r28, %r9;
	bra.uni 	BB0_14;

BB0_8:
	ld.u32 	%r8, [%rd2];
	mov.u32 	%r28, %r8;

BB0_14:
	mov.u32 	%r26, %r28;
	mov.u32 	%r27, %r26;
	mov.u32 	%r30, 0;
	setp.ne.s32	%p11, %r1, %r27;
	@%p11 bra 	BB0_1;
	bra.uni 	BB0_15;

BB0_2:
	shl.b32 	%r17, %r2, 8;
	ld.u32 	%r18, [%rd1];
	or.b32  	%r30, %r17, %r18;

BB0_15:
	st.param.b32	[func_retval0+0], %r30;
	ret;
}

	// .globl	hilo
.visible .entry hilo(
	.param .u64 hilo_param_0,
	.param .u32 hilo_param_1,
	.param .u32 hilo_param_2,
	.param .u64 hilo_param_3,
	.param .u64 hilo_param_4,
	.param .u64 hilo_param_5,
	.param .u64 hilo_param_6,
	.param .u64 hilo_param_7,
	.param .u64 hilo_param_8,
	.param .u32 hilo_param_9,
	.param .u32 hilo_param_10,
	.param .u64 hilo_param_11,
	.param .u64 hilo_param_12,
	.param .u64 hilo_param_13
)
{
	.reg .pred 	%p<19>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<72>;
	.reg .b64 	%rd<50>;


	ld.param.u64 	%rd12, [hilo_param_0];
	ld.param.u32 	%r21, [hilo_param_1];
	ld.param.u32 	%r22, [hilo_param_2];
	ld.param.u64 	%rd13, [hilo_param_3];
	ld.param.u64 	%rd14, [hilo_param_4];
	ld.param.u64 	%rd15, [hilo_param_5];
	ld.param.u64 	%rd16, [hilo_param_6];
	ld.param.u64 	%rd17, [hilo_param_7];
	ld.param.u64 	%rd18, [hilo_param_8];
	ld.param.u32 	%r23, [hilo_param_9];
	ld.param.u32 	%r24, [hilo_param_10];
	ld.param.u64 	%rd19, [hilo_param_11];
	ld.param.u64 	%rd20, [hilo_param_12];
	ld.param.u64 	%rd21, [hilo_param_13];
	mov.u32 	%r25, %ctaid.x;
	mov.u32 	%r26, %ntid.x;
	mov.u32 	%r27, %tid.x;
	mad.lo.s32 	%r28, %r26, %r25, %r27;
	mul.lo.s32 	%r1, %r28, %r22;
	setp.lt.s32	%p1, %r1, %r24;
	setp.gt.s32	%p2, %r22, 0;
	and.pred  	%p3, %p1, %p2;
	mov.u32 	%r68, %r1;
	@!%p3 bra 	BB1_20;
	bra.uni 	BB1_1;

BB1_1:
	mul.lo.s32 	%r70, %r28, %r22;
	cvta.to.global.u64 	%rd22, %rd14;
	cvta.to.global.u64 	%rd25, %rd13;
	cvta.to.global.u64 	%rd29, %rd15;
	cvta.to.global.u64 	%rd32, %rd18;
	cvta.to.global.u64 	%rd34, %rd16;
	cvta.to.global.u64 	%rd35, %rd17;
	cvta.to.global.u64 	%rd39, %rd19;
	cvta.to.global.u64 	%rd42, %rd21;
	mov.u32 	%r69, %r70;

BB1_2:
	mov.u32 	%r65, %r70;
	mov.u32 	%r71, %r65;
	mov.u32 	%r60, 0;

BB1_3:
	mov.u32 	%r57, %r60;
	mov.u32 	%r5, %r57;
	cvt.s64.s32	%rd1, %r5;
	mul.wide.s32 	%rd23, %r5, 4;
	add.s64 	%rd24, %rd22, %rd23;
	ld.global.u32 	%r6, [%rd24];
	setp.eq.s32	%p4, %r6, 0;
	add.s64 	%rd2, %rd25, %rd23;
	@%p4 bra 	BB1_5;
	bra.uni 	BB1_4;

BB1_5:
	ld.global.u32 	%r36, [%rd2];
	mad.lo.s32 	%r37, %r69, %r21, %r36;
	cvta.to.global.u64 	%rd26, %rd12;
	mul.wide.s32 	%rd27, %r37, 4;
	add.s64 	%rd28, %rd26, %rd27;
	ld.global.f32 	%f1, [%rd28];
	shl.b64 	%rd30, %rd1, 2;
	add.s64 	%rd31, %rd29, %rd30;
	ld.global.u32 	%r8, [%rd31];
	setp.lt.s32	%p5, %r8, 1;
	mov.u32 	%r61, %r5;
	@%p5 bra 	BB1_16;

	mul.lo.s32 	%r39, %r23, %r5;
	mul.wide.s32 	%rd33, %r39, 4;
	add.s64 	%rd49, %rd32, %rd33;
	add.s64 	%rd48, %rd34, %rd33;
	add.s64 	%rd47, %rd35, %rd33;
	mov.u32 	%r62, 0;

BB1_7:
	ld.global.f32 	%f2, [%rd47];
	ld.global.u32 	%r10, [%rd48];
	setp.eq.s32	%p6, %r10, 0;
	@%p6 bra 	BB1_13;
	bra.uni 	BB1_8;

BB1_13:
	setp.gtu.f32	%p12, %f1, %f2;
	@%p12 bra 	BB1_15;
	bra.uni 	BB1_14;

BB1_8:
	setp.eq.s32	%p7, %r10, 1;
	@%p7 bra 	BB1_11;
	bra.uni 	BB1_9;

BB1_11:
	setp.leu.f32	%p11, %f1, %f2;
	@%p11 bra 	BB1_15;
	bra.uni 	BB1_12;

BB1_9:
	setp.eq.s32	%p8, %r10, 2;
	setp.eq.f32	%p9, %f1, %f2;
	and.pred  	%p10, %p8, %p9;
	@!%p10 bra 	BB1_15;
	bra.uni 	BB1_10;

BB1_15:
	add.s32 	%r62, %r62, 1;
	add.s64 	%rd49, %rd49, 4;
	add.s64 	%rd48, %rd48, 4;
	add.s64 	%rd47, %rd47, 4;
	setp.lt.s32	%p13, %r62, %r8;
	mov.u32 	%r58, %r5;
	mov.u32 	%r61, %r58;
	@%p13 bra 	BB1_7;
	bra.uni 	BB1_16;

BB1_14:
	ld.global.u32 	%r13, [%rd49];
	mov.u32 	%r61, %r13;
	bra.uni 	BB1_16;

BB1_12:
	ld.global.u32 	%r12, [%rd49];
	mov.u32 	%r61, %r12;
	bra.uni 	BB1_16;

BB1_10:
	ld.global.u32 	%r11, [%rd49];
	mov.u32 	%r61, %r11;

BB1_16:
	mov.u32 	%r59, %r61;
	mov.u32 	%r60, %r59;
	mov.u32 	%r63, 0;
	setp.ne.s32	%p14, %r5, %r60;
	@%p14 bra 	BB1_3;
	bra.uni 	BB1_17;

BB1_4:
	shl.b32 	%r34, %r6, 8;
	ld.global.u32 	%r35, [%rd2];
	or.b32  	%r63, %r34, %r35;

BB1_17:
	mad.lo.s32 	%r41, %r69, %r21, %r21;
	add.s32 	%r42, %r41, -1;
	cvta.to.global.u64 	%rd36, %rd12;
	mul.wide.s32 	%rd37, %r42, 4;
	add.s64 	%rd38, %rd36, %rd37;
	ld.global.f32 	%f3, [%rd38];
	cvt.rzi.s32.f32	%r43, %f3;
	and.b32  	%r44, %r63, 255;
	setp.eq.s32	%p15, %r44, %r43;
	@%p15 bra 	BB1_19;

	mul.wide.s32 	%rd40, %r71, 4;
	add.s64 	%rd41, %rd39, %rd40;
	st.global.u32 	[%rd41], %r69;
	add.s64 	%rd43, %rd42, %rd40;
	shr.s32 	%r45, %r63, 8;
	st.global.u32 	[%rd43], %r45;
	add.s32 	%r71, %r71, 1;

BB1_19:
	mov.u32 	%r70, %r71;
	add.s32 	%r69, %r69, 1;
	setp.lt.s32	%p16, %r69, %r24;
	mad.lo.s32 	%r50, %r28, %r22, %r22;
	setp.lt.s32	%p17, %r69, %r50;
	and.pred  	%p18, %p16, %p17;
	mov.u32 	%r67, %r70;
	mov.u32 	%r68, %r67;
	@%p18 bra 	BB1_2;

BB1_20:
	mov.u32 	%r20, %r68;
	sub.s32 	%r56, %r20, %r1;
	cvta.to.global.u64 	%rd44, %rd20;
	mul.wide.s32 	%rd45, %r28, 4;
	add.s64 	%rd46, %rd44, %rd45;
	st.global.u32 	[%rd46], %r56;
	ret;
}

	// .globl	countSize
.visible .entry countSize(
	.param .u64 countSize_param_0,
	.param .u32 countSize_param_1,
	.param .u64 countSize_param_2
)
{
	.reg .pred 	%p<3>;
	.reg .b32 	%r<15>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd5, [countSize_param_0];
	ld.param.u32 	%r6, [countSize_param_1];
	ld.param.u64 	%rd4, [countSize_param_2];
	cvta.to.global.u64 	%rd7, %rd5;
	mov.u32 	%r13, 0;
	mov.u32 	%r14, %r13;
	mov.u32 	%r11, %r13;
	setp.lt.s32	%p1, %r6, 1;
	@%p1 bra 	BB2_2;

BB2_1:
	ldu.global.u32 	%r10, [%rd7];
	add.s32 	%r14, %r10, %r14;
	add.s64 	%rd7, %rd7, 4;
	add.s32 	%r11, %r11, 1;
	setp.lt.s32	%p2, %r11, %r6;
	mov.u32 	%r13, %r14;
	@%p2 bra 	BB2_1;

BB2_2:
	cvta.to.global.u64 	%rd6, %rd4;
	st.global.u32 	[%rd6], %r13;
	ret;
}

	// .globl	genResult
.visible .entry genResult(
	.param .u64 genResult_param_0,
	.param .u64 genResult_param_1,
	.param .u64 genResult_param_2,
	.param .u32 genResult_param_3,
	.param .u32 genResult_param_4,
	.param .u64 genResult_param_5,
	.param .u64 genResult_param_6
)
{
	.reg .pred 	%p<5>;
	.reg .b32 	%r<22>;
	.reg .b64 	%rd<31>;


	ld.param.u64 	%rd19, [genResult_param_0];
	ld.param.u64 	%rd20, [genResult_param_1];
	ld.param.u64 	%rd21, [genResult_param_2];
	ld.param.u32 	%r10, [genResult_param_3];
	ld.param.u32 	%r11, [genResult_param_4];
	ld.param.u64 	%rd22, [genResult_param_5];
	ld.param.u64 	%rd18, [genResult_param_6];
	cvta.to.global.u64 	%rd1, %rd20;
	cvta.to.global.u64 	%rd2, %rd22;
	cvta.to.global.u64 	%rd3, %rd19;
	cvta.to.global.u64 	%rd4, %rd21;
	mov.u32 	%r21, 0;
	mov.u32 	%r19, %r21;
	setp.lt.s32	%p1, %r10, 1;
	@%p1 bra 	BB3_6;

	cvta.to.global.u64 	%rd25, %rd18;

BB3_2:
	mul.lo.s32 	%r3, %r11, %r19;
	mul.wide.s32 	%rd23, %r19, 4;
	add.s64 	%rd5, %rd4, %rd23;
	ld.global.u32 	%r14, [%rd5];
	setp.lt.s32	%p2, %r14, 1;
	@%p2 bra 	BB3_5;

	mul.wide.s32 	%rd24, %r3, 4;
	add.s64 	%rd30, %rd1, %rd24;
	add.s64 	%rd29, %rd3, %rd24;
	mul.wide.s32 	%rd26, %r21, 4;
	add.s64 	%rd28, %rd25, %rd26;
	add.s64 	%rd27, %rd2, %rd26;
	mov.u32 	%r20, 0;

BB3_4:
	ld.global.u32 	%r16, [%rd29];
	st.global.u32 	[%rd27], %r16;
	ld.global.u32 	%r17, [%rd30];
	st.global.u32 	[%rd28], %r17;
	add.s32 	%r21, %r21, 1;
	add.s64 	%rd30, %rd30, 4;
	add.s64 	%rd29, %rd29, 4;
	add.s64 	%rd28, %rd28, 4;
	add.s64 	%rd27, %rd27, 4;
	ld.global.u32 	%r18, [%rd5];
	add.s32 	%r20, %r20, 1;
	setp.lt.s32	%p3, %r20, %r18;
	@%p3 bra 	BB3_4;

BB3_5:
	add.s32 	%r19, %r19, 1;
	setp.lt.s32	%p4, %r19, %r10;
	@%p4 bra 	BB3_2;

BB3_6:
	ret;
}

	// .globl	filter
.visible .entry filter(
	.param .u64 filter_param_0,
	.param .u64 filter_param_1,
	.param .u32 filter_param_2,
	.param .u32 filter_param_3,
	.param .u64 filter_param_4
)
{
	.reg .pred 	%p<7>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<23>;
	.reg .b64 	%rd<19>;


	ld.param.u64 	%rd10, [filter_param_0];
	ld.param.u64 	%rd11, [filter_param_1];
	ld.param.u32 	%r12, [filter_param_2];
	ld.param.u32 	%r13, [filter_param_3];
	ld.param.u64 	%rd12, [filter_param_4];
	cvta.to.global.u64 	%rd1, %rd12;
	cvta.to.global.u64 	%rd2, %rd11;
	cvta.to.global.u64 	%rd3, %rd10;
	setp.gt.s32	%p1, %r13, 0;
	setp.gt.s32	%p2, %r12, 0;
	and.pred  	%p3, %p2, %p1;
	mov.u32 	%r21, 0;
	mov.u32 	%r20, %r21;
	mov.u32 	%r19, %r21;
	@!%p3 bra 	BB4_7;
	bra.uni 	BB4_1;

BB4_1:
	mul.lo.s32 	%r4, %r13, %r19;
	mul.wide.s32 	%rd13, %r21, 4;
	add.s64 	%rd14, %rd3, %rd13;
	ld.global.u32 	%r17, [%rd14];
	setp.eq.s32	%p4, %r19, %r17;
	@%p4 bra 	BB4_5;
	bra.uni 	BB4_2;

BB4_5:
	add.s32 	%r21, %r21, 1;
	bra.uni 	BB4_6;

BB4_2:
	mul.wide.s32 	%rd15, %r4, 4;
	add.s64 	%rd17, %rd2, %rd15;
	mul.wide.s32 	%rd16, %r20, 4;
	add.s64 	%rd18, %rd1, %rd16;
	mov.u32 	%r22, 0;

BB4_3:
	ld.global.f32 	%f1, [%rd17];
	st.global.f32 	[%rd18], %f1;
	add.s64 	%rd18, %rd18, 4;
	add.s64 	%rd17, %rd17, 4;
	add.s32 	%r22, %r22, 1;
	setp.lt.s32	%p5, %r22, %r13;
	@%p5 bra 	BB4_3;

	add.s32 	%r20, %r20, %r13;

BB4_6:
	add.s32 	%r19, %r19, 1;
	setp.lt.s32	%p6, %r19, %r12;
	@%p6 bra 	BB4_1;

BB4_7:
	ret;
}

	// .globl	filterParallel
.visible .entry filterParallel(
	.param .u64 filterParallel_param_0,
	.param .u64 filterParallel_param_1,
	.param .u64 filterParallel_param_2,
	.param .u32 filterParallel_param_3,
	.param .u32 filterParallel_param_4,
	.param .u32 filterParallel_param_5,
	.param .u32 filterParallel_param_6,
	.param .u64 filterParallel_param_7
)
{
	.reg .pred 	%p<12>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<53>;
	.reg .b64 	%rd<24>;


	ld.param.u64 	%rd11, [filterParallel_param_0];
	ld.param.u64 	%rd12, [filterParallel_param_1];
	ld.param.u64 	%rd13, [filterParallel_param_2];
	ld.param.u32 	%r27, [filterParallel_param_3];
	ld.param.u32 	%r28, [filterParallel_param_4];
	ld.param.u32 	%r29, [filterParallel_param_5];
	ld.param.u64 	%rd14, [filterParallel_param_7];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r2, %ctaid.x;
	mov.u32 	%r3, %tid.x;
	mad.lo.s32 	%r4, %r1, %r2, %r3;
	mul.lo.s32 	%r42, %r4, %r29;
	setp.ge.s32	%p1, %r42, %r27;
	@%p1 bra 	BB5_11;

	cvta.to.global.u64 	%rd21, %rd12;
	mov.u32 	%r50, 0;
	mov.u32 	%r51, %r50;
	mov.u32 	%r40, %r50;
	setp.lt.s32	%p2, %r4, 1;
	@%p2 bra 	BB5_3;

BB5_2:
	ld.global.u32 	%r33, [%rd21];
	add.s32 	%r51, %r33, %r51;
	add.s64 	%rd21, %rd21, 4;
	add.s32 	%r40, %r40, 1;
	setp.lt.s32	%p3, %r40, %r4;
	mov.u32 	%r50, %r51;
	@%p3 bra 	BB5_2;

BB5_3:
	mov.u32 	%r48, %r50;
	setp.gt.s32	%p4, %r28, 0;
	setp.gt.s32	%p5, %r29, 0;
	and.pred  	%p6, %p5, %p4;
	@!%p6 bra 	BB5_11;
	bra.uni 	BB5_4;

BB5_4:
	cvta.to.global.u64 	%rd4, %rd13;
	sub.s32 	%r35, %r42, %r48;
	mul.lo.s32 	%r43, %r35, %r28;
	add.s32 	%r12, %r42, %r29;
	mul.lo.s32 	%r36, %r29, %r28;
	mul.lo.s32 	%r13, %r36, %r4;
	mov.u32 	%r41, 0;
	cvta.to.global.u64 	%rd15, %rd11;
	cvta.to.global.u64 	%rd19, %rd14;

BB5_5:
	mov.u32 	%r46, %r48;
	mov.u32 	%r49, %r46;
	mad.lo.s32 	%r18, %r28, %r41, %r13;
	mul.wide.s32 	%rd16, %r49, 4;
	add.s64 	%rd17, %rd15, %rd16;
	ld.global.u32 	%r38, [%rd17];
	setp.eq.s32	%p7, %r42, %r38;
	@%p7 bra 	BB5_9;
	bra.uni 	BB5_6;

BB5_9:
	add.s32 	%r49, %r49, 1;
	bra.uni 	BB5_10;

BB5_6:
	mul.wide.s32 	%rd18, %r18, 4;
	add.s64 	%rd22, %rd4, %rd18;
	mul.wide.s32 	%rd20, %r43, 4;
	add.s64 	%rd23, %rd19, %rd20;
	mov.u32 	%r52, 0;

BB5_7:
	ld.global.f32 	%f1, [%rd22];
	st.global.f32 	[%rd23], %f1;
	add.s64 	%rd23, %rd23, 4;
	add.s64 	%rd22, %rd22, 4;
	add.s32 	%r52, %r52, 1;
	setp.lt.s32	%p8, %r52, %r28;
	@%p8 bra 	BB5_7;

	add.s32 	%r43, %r43, %r28;

BB5_10:
	mov.u32 	%r48, %r49;
	add.s32 	%r42, %r42, 1;
	setp.lt.s32	%p9, %r42, %r27;
	setp.lt.s32	%p10, %r42, %r12;
	and.pred  	%p11, %p9, %p10;
	add.s32 	%r41, %r41, 1;
	@%p11 bra 	BB5_5;

BB5_11:
	ret;
}

	// .globl	countersForLeaf
.visible .entry countersForLeaf(
	.param .u32 countersForLeaf_param_0,
	.param .u64 countersForLeaf_param_1,
	.param .u32 countersForLeaf_param_2,
	.param .u64 countersForLeaf_param_3
)
{
	.reg .pred 	%p<5>;
	.reg .b32 	%r<15>;
	.reg .b64 	%rd<13>;


	ld.param.u32 	%r5, [countersForLeaf_param_0];
	ld.param.u64 	%rd7, [countersForLeaf_param_1];
	ld.param.u32 	%r6, [countersForLeaf_param_2];
	ld.param.u64 	%rd8, [countersForLeaf_param_3];
	cvta.to.global.u64 	%rd1, %rd8;
	mov.u32 	%r7, 0;
	setp.lt.s32	%p1, %r6, 1;
	@%p1 bra 	BB6_3;

	mov.u64 	%rd11, %rd1;
	mov.u32 	%r13, %r7;

BB6_2:
	mov.u32 	%r1, %r13;
	mov.u64 	%rd2, %rd11;
	st.global.u32 	[%rd2], %r7;
	add.s64 	%rd3, %rd2, 4;
	add.s32 	%r2, %r1, 1;
	setp.lt.s32	%p2, %r2, %r6;
	mov.u64 	%rd11, %rd3;
	mov.u32 	%r13, %r2;
	@%p2 bra 	BB6_2;

BB6_3:
	cvta.to.global.u64 	%rd12, %rd7;
	mov.u32 	%r14, 0;
	setp.lt.s32	%p3, %r5, 1;
	@%p3 bra 	BB6_5;

BB6_4:
	ld.global.u32 	%r10, [%rd12];
	mul.wide.s32 	%rd9, %r10, 4;
	add.s64 	%rd10, %rd1, %rd9;
	ld.global.u32 	%r11, [%rd10];
	add.s32 	%r12, %r11, 1;
	st.global.u32 	[%rd10], %r12;
	add.s64 	%rd12, %rd12, 4;
	add.s32 	%r14, %r14, 1;
	setp.lt.s32	%p4, %r14, %r5;
	@%p4 bra 	BB6_4;

BB6_5:
	ret;
}

	// .globl	countersPerLeaf
.visible .entry countersPerLeaf(
	.param .u32 countersPerLeaf_param_0,
	.param .u64 countersPerLeaf_param_1,
	.param .f32 countersPerLeaf_param_2,
	.param .u32 countersPerLeaf_param_3,
	.param .u64 countersPerLeaf_param_4,
	.param .u64 countersPerLeaf_param_5
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<15>;
	.reg .b64 	%rd<13>;


	ld.param.u32 	%r8, [countersPerLeaf_param_0];
	ld.param.u64 	%rd8, [countersPerLeaf_param_1];
	ld.param.f32 	%f1, [countersPerLeaf_param_2];
	ld.param.u32 	%r9, [countersPerLeaf_param_3];
	ld.param.u64 	%rd9, [countersPerLeaf_param_4];
	ld.param.u64 	%rd10, [countersPerLeaf_param_5];
	cvta.to.global.u64 	%rd12, %rd9;
	cvta.to.global.u64 	%rd11, %rd8;
	cvta.to.global.u64 	%rd3, %rd10;
	mov.u32 	%r13, 0;
	st.global.u32 	[%rd3], %r13;
	setp.lt.s32	%p1, %r8, 1;
	@%p1 bra 	BB7_5;

BB7_1:
	ld.global.u32 	%r2, [%rd11];
	cvt.rn.f32.s32	%f2, %r2;
	mul.f32 	%f3, %f2, %f1;
	cvt.rzi.s32.f32	%r3, %f3;
	setp.gt.s32	%p2, %r3, %r9;
	@%p2 bra 	BB7_3;
	bra.uni 	BB7_2;

BB7_3:
	st.global.u32 	[%rd12], %r3;
	ld.global.u32 	%r12, [%rd3];
	add.s32 	%r14, %r12, %r3;
	bra.uni 	BB7_4;

BB7_2:
	st.global.u32 	[%rd12], %r2;
	ld.global.u32 	%r11, [%rd3];
	add.s32 	%r14, %r11, %r2;

BB7_4:
	st.global.u32 	[%rd3], %r14;
	add.s64 	%rd12, %rd12, 4;
	add.s64 	%rd11, %rd11, 4;
	add.s32 	%r13, %r13, 1;
	setp.lt.s32	%p3, %r13, %r8;
	@%p3 bra 	BB7_1;

BB7_5:
	ret;
}

	// .globl	filterCounters
.visible .entry filterCounters(
	.param .u32 filterCounters_param_0,
	.param .u32 filterCounters_param_1,
	.param .u64 filterCounters_param_2,
	.param .u64 filterCounters_param_3,
	.param .u64 filterCounters_param_4,
	.param .u64 filterCounters_param_5,
	.param .u64 filterCounters_param_6
)
{
	.reg .pred 	%p<6>;
	.reg .b32 	%r<23>;
	.reg .b64 	%rd<25>;


	ld.param.u32 	%r8, [filterCounters_param_0];
	ld.param.u32 	%r9, [filterCounters_param_1];
	ld.param.u64 	%rd13, [filterCounters_param_2];
	ld.param.u64 	%rd14, [filterCounters_param_3];
	ld.param.u64 	%rd15, [filterCounters_param_4];
	ld.param.u64 	%rd17, [filterCounters_param_5];
	ld.param.u64 	%rd16, [filterCounters_param_6];
	cvta.to.global.u64 	%rd1, %rd17;
	mov.u32 	%r10, 0;
	setp.lt.s32	%p1, %r8, 1;
	@%p1 bra 	BB8_3;

	mov.u64 	%rd22, %rd1;
	mov.u32 	%r20, %r10;

BB8_2:
	mov.u32 	%r1, %r20;
	mov.u64 	%rd2, %rd22;
	st.global.u32 	[%rd2], %r10;
	add.s64 	%rd3, %rd2, 4;
	add.s32 	%r2, %r1, 1;
	setp.lt.s32	%p2, %r2, %r8;
	mov.u64 	%rd22, %rd3;
	mov.u32 	%r20, %r2;
	@%p2 bra 	BB8_2;

BB8_3:
	cvta.to.global.u64 	%rd4, %rd16;
	cvta.to.global.u64 	%rd24, %rd13;
	cvta.to.global.u64 	%rd6, %rd15;
	cvta.to.global.u64 	%rd23, %rd14;
	mov.u32 	%r22, 0;
	mov.u32 	%r21, %r22;
	setp.lt.s32	%p3, %r9, 1;
	@%p3 bra 	BB8_7;

BB8_4:
	ld.global.u32 	%r14, [%rd23];
	mul.wide.s32 	%rd18, %r14, 4;
	add.s64 	%rd10, %rd1, %rd18;
	add.s64 	%rd19, %rd6, %rd18;
	ld.global.u32 	%r15, [%rd19];
	ld.global.u32 	%r16, [%rd10];
	setp.ge.s32	%p4, %r16, %r15;
	@%p4 bra 	BB8_6;

	ld.global.u32 	%r17, [%rd24];
	mul.wide.s32 	%rd20, %r22, 4;
	add.s64 	%rd21, %rd4, %rd20;
	st.global.u32 	[%rd21], %r17;
	add.s32 	%r22, %r22, 1;
	ld.global.u32 	%r18, [%rd10];
	add.s32 	%r19, %r18, 1;
	st.global.u32 	[%rd10], %r19;

BB8_6:
	add.s64 	%rd24, %rd24, 4;
	add.s64 	%rd23, %rd23, 4;
	add.s32 	%r21, %r21, 1;
	setp.lt.s32	%p5, %r21, %r9;
	@%p5 bra 	BB8_4;

BB8_7:
	ret;
}

	// .globl	calcAcc
.visible .entry calcAcc(
	.param .u64 calcAcc_param_0,
	.param .u32 calcAcc_param_1,
	.param .u32 calcAcc_param_2,
	.param .u64 calcAcc_param_3,
	.param .u64 calcAcc_param_4,
	.param .u64 calcAcc_param_5,
	.param .u64 calcAcc_param_6,
	.param .u64 calcAcc_param_7,
	.param .u64 calcAcc_param_8,
	.param .u32 calcAcc_param_9,
	.param .u32 calcAcc_param_10,
	.param .u64 calcAcc_param_11
)
{
	.reg .pred 	%p<19>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<60>;
	.reg .b64 	%rd<46>;


	ld.param.u64 	%rd11, [calcAcc_param_0];
	ld.param.u32 	%r19, [calcAcc_param_1];
	ld.param.u32 	%r20, [calcAcc_param_2];
	ld.param.u64 	%rd12, [calcAcc_param_3];
	ld.param.u64 	%rd13, [calcAcc_param_4];
	ld.param.u64 	%rd14, [calcAcc_param_5];
	ld.param.u64 	%rd15, [calcAcc_param_6];
	ld.param.u64 	%rd16, [calcAcc_param_7];
	ld.param.u64 	%rd17, [calcAcc_param_8];
	ld.param.u32 	%r21, [calcAcc_param_9];
	ld.param.u32 	%r22, [calcAcc_param_10];
	ld.param.u64 	%rd18, [calcAcc_param_11];
	cvta.to.global.u64 	%rd19, %rd18;
	mov.u32 	%r23, %ntid.x;
	mov.u32 	%r24, %ctaid.x;
	mov.u32 	%r25, %tid.x;
	mad.lo.s32 	%r26, %r23, %r24, %r25;
	mul.lo.s32 	%r47, %r26, %r20;
	mul.wide.s32 	%rd20, %r26, 4;
	add.s64 	%rd21, %rd19, %rd20;
	mov.u32 	%r27, 0;
	st.global.u32 	[%rd21], %r27;
	setp.lt.s32	%p1, %r47, %r22;
	setp.gt.s32	%p2, %r20, 0;
	and.pred  	%p3, %p1, %p2;
	@!%p3 bra 	BB9_20;
	bra.uni 	BB9_1;

BB9_1:
	cvta.to.global.u64 	%rd22, %rd13;
	cvta.to.global.u64 	%rd25, %rd12;
	cvta.to.global.u64 	%rd30, %rd14;
	cvta.to.global.u64 	%rd33, %rd17;
	cvta.to.global.u64 	%rd35, %rd15;
	cvta.to.global.u64 	%rd36, %rd16;
	mov.u32 	%r56, %r27;

BB9_2:
	mov.u32 	%r52, %r56;
	mov.u32 	%r57, %r52;
	mov.u32 	%r54, %r27;

BB9_3:
	mov.u32 	%r49, %r54;
	mov.u32 	%r4, %r49;
	cvt.s64.s32	%rd1, %r4;
	mul.wide.s32 	%rd23, %r4, 4;
	add.s64 	%rd24, %rd22, %rd23;
	ld.global.u32 	%r30, [%rd24];
	setp.eq.s32	%p4, %r30, 0;
	add.s64 	%rd26, %rd25, %rd23;
	ld.global.u32 	%r5, [%rd26];
	@%p4 bra 	BB9_5;
	bra.uni 	BB9_4;

BB9_5:
	mad.lo.s32 	%r31, %r47, %r19, %r5;
	cvta.to.global.u64 	%rd27, %rd11;
	mul.wide.s32 	%rd28, %r31, 4;
	add.s64 	%rd29, %rd27, %rd28;
	ld.global.f32 	%f1, [%rd29];
	shl.b64 	%rd31, %rd1, 2;
	add.s64 	%rd32, %rd30, %rd31;
	ld.global.u32 	%r7, [%rd32];
	setp.lt.s32	%p5, %r7, 1;
	mov.u32 	%r55, %r4;
	@%p5 bra 	BB9_16;

	mul.lo.s32 	%r33, %r21, %r4;
	mul.wide.s32 	%rd34, %r33, 4;
	add.s64 	%rd45, %rd33, %rd34;
	add.s64 	%rd44, %rd35, %rd34;
	add.s64 	%rd43, %rd36, %rd34;
	mov.u32 	%r58, 0;

BB9_7:
	ld.global.f32 	%f2, [%rd43];
	ld.global.u32 	%r9, [%rd44];
	setp.eq.s32	%p6, %r9, 0;
	@%p6 bra 	BB9_13;
	bra.uni 	BB9_8;

BB9_13:
	setp.gtu.f32	%p12, %f1, %f2;
	@%p12 bra 	BB9_15;
	bra.uni 	BB9_14;

BB9_8:
	setp.eq.s32	%p7, %r9, 1;
	@%p7 bra 	BB9_11;
	bra.uni 	BB9_9;

BB9_11:
	setp.leu.f32	%p11, %f1, %f2;
	@%p11 bra 	BB9_15;
	bra.uni 	BB9_12;

BB9_9:
	setp.eq.s32	%p8, %r9, 2;
	setp.eq.f32	%p9, %f1, %f2;
	and.pred  	%p10, %p8, %p9;
	@!%p10 bra 	BB9_15;
	bra.uni 	BB9_10;

BB9_15:
	add.s32 	%r58, %r58, 1;
	add.s64 	%rd45, %rd45, 4;
	add.s64 	%rd44, %rd44, 4;
	add.s64 	%rd43, %rd43, 4;
	setp.lt.s32	%p13, %r58, %r7;
	mov.u32 	%r50, %r4;
	mov.u32 	%r55, %r50;
	@%p13 bra 	BB9_7;
	bra.uni 	BB9_16;

BB9_14:
	ld.global.u32 	%r12, [%rd45];
	mov.u32 	%r55, %r12;
	bra.uni 	BB9_16;

BB9_12:
	ld.global.u32 	%r11, [%rd45];
	mov.u32 	%r55, %r11;
	bra.uni 	BB9_16;

BB9_10:
	ld.global.u32 	%r10, [%rd45];
	mov.u32 	%r55, %r10;

BB9_16:
	mov.u32 	%r51, %r55;
	mov.u32 	%r14, %r51;
	mov.u32 	%r59, 0;
	setp.ne.s32	%p14, %r4, %r14;
	mov.u32 	%r54, %r14;
	@%p14 bra 	BB9_3;
	bra.uni 	BB9_17;

BB9_4:
	and.b32  	%r59, %r5, 255;

BB9_17:
	mad.lo.s32 	%r35, %r47, %r19, %r19;
	add.s32 	%r36, %r35, -1;
	cvta.to.global.u64 	%rd37, %rd11;
	mul.wide.s32 	%rd38, %r36, 4;
	add.s64 	%rd39, %rd37, %rd38;
	ld.global.f32 	%f3, [%rd39];
	cvt.rzi.s32.f32	%r37, %f3;
	setp.ne.s32	%p15, %r59, %r37;
	@%p15 bra 	BB9_19;

	add.s32 	%r57, %r57, 1;
	st.global.u32 	[%rd21], %r57;

BB9_19:
	mov.u32 	%r56, %r57;
	add.s32 	%r47, %r47, 1;
	setp.lt.s32	%p16, %r47, %r22;
	mad.lo.s32 	%r46, %r26, %r20, %r20;
	setp.lt.s32	%p17, %r47, %r46;
	and.pred  	%p18, %p16, %p17;
	@%p18 bra 	BB9_2;

BB9_20:
	ret;
}

	// .globl	totalAcc
.visible .entry totalAcc(
	.param .u64 totalAcc_param_0,
	.param .u32 totalAcc_param_1,
	.param .u64 totalAcc_param_2
)
{
	.reg .pred 	%p<3>;
	.reg .b32 	%r<15>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd5, [totalAcc_param_0];
	ld.param.u32 	%r6, [totalAcc_param_1];
	ld.param.u64 	%rd4, [totalAcc_param_2];
	cvta.to.global.u64 	%rd7, %rd5;
	mov.u32 	%r13, 0;
	mov.u32 	%r14, %r13;
	mov.u32 	%r11, %r13;
	setp.lt.s32	%p1, %r6, 1;
	@%p1 bra 	BB10_2;

BB10_1:
	ldu.global.u32 	%r10, [%rd7];
	add.s32 	%r14, %r10, %r14;
	add.s64 	%rd7, %rd7, 4;
	add.s32 	%r11, %r11, 1;
	setp.lt.s32	%p2, %r11, %r6;
	mov.u32 	%r13, %r14;
	@%p2 bra 	BB10_1;

BB10_2:
	cvta.to.global.u64 	%rd6, %rd4;
	st.global.u32 	[%rd6], %r13;
	ret;
}


